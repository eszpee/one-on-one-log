FROM node:20-slim as builder

WORKDIR /app

# Copy package files first for better layer caching
COPY package*.json ./

# Clean install dependencies with platform-specific handling for Rollup
RUN npm install --no-optional && \
    npm install --platform=linux --arch=x64 @rollup/rollup-linux-x64-gnu

# Copy the rest of the application
COPY . .

# Build the application with verbose output for better debugging
RUN npm run build --verbose || echo "Build failed. Debug output:" && ls -la

# Create a flag file if build succeeds
RUN if [ -d "dist" ] && [ "$(ls -A dist)" ]; then \
      echo "Build completed successfully" > /app/build_succeeded && \
      ls -la dist/; \
    else \
      echo "WARNING: Build did not produce expected dist directory" && \
      touch /app/build_failed; \
    fi

# Second stage - Serve the built application
FROM node:20-slim

WORKDIR /app

# Install http-server globally
RUN npm install -g http-server

# Create directories
RUN mkdir -p /app/dist /app/static-test

# Always copy the static test page
COPY static-test/ /app/static-test/

# Try to copy build flag files (using no bash specific features)
COPY --from=builder /app/build_* /app/

# Try to copy dist directory (using no bash specific features)
COPY --from=builder /app/dist/* /app/dist/

# Create a script directly in the container
RUN echo '#!/bin/sh' > /app/start.sh && \
    echo 'if [ -f "/app/build_succeeded" ] && [ -d "/app/dist" ] && [ "$(ls -A /app/dist)" ]; then' >> /app/start.sh && \
    echo '  echo "Starting server with built application (dist directory)"' >> /app/start.sh && \
    echo '  exec http-server ./dist -p 8888 --cors -a 0.0.0.0 --spa' >> /app/start.sh && \
    echo 'else' >> /app/start.sh && \
    echo '  echo "WARNING: Using static test page instead of React app"' >> /app/start.sh && \
    echo '  exec http-server ./static-test -p 8888 --cors -a 0.0.0.0' >> /app/start.sh && \
    echo 'fi' >> /app/start.sh && \
    chmod +x /app/start.sh && \
    cat /app/start.sh

# Expose the application port
EXPOSE 8888

# Start the server using the script directly
CMD ["/bin/sh", "/app/start.sh"]
